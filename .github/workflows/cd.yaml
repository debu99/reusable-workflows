name: Template_CD

on:
  workflow_call:
    inputs:
      WORKING_DIR:
        required: false
        type: string
        default: '.'
      NEW_VERSION:
        required: true
        type: string
      APP_NAMESPACE:
        required: true
        type: string
      APP_NAME:
        required: true
        type: string
      APP_PORT:
        default: "8080"
        required: false
        type: string
      HEALTHCHECK_URL:
        default: '/health'
        required: false
        type: string
      ENVIRONMENT:
        required: false
        type: string
    secrets:
      KUBE_CONFIG:
        required: true
    outputs:
      helm_status:
        description: "The helm deployment status"
        value: ${{ jobs.deploy.outputs.helm_status }}
      test_status:
        description: "The after deployment test status"
        value: ${{ jobs.deploy.outputs.test_status }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ENVIRONMENT || 'non-prod' }}
    defaults:
      run:
        working-directory: ${{ inputs.WORKING_DIR }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}
      - uses: azure/setup-kubectl@v3
        with:
          version: 'v1.25.4'
      - name: Setup Helm
        uses: Azure/setup-helm@v3
        with:
          version: 'v3.8.2'
      - name: Debug
        run: |
          echo "ENVIRONMENT=${{ inputs.ENVIRONMENT }}"
          echo "NEW_VERSION=${{ inputs.NEW_VERSION }}"
          echo "APP_NAMESPACE=${{ inputs.APP_NAMESPACE }} APP_NAME=${{ inputs.APP_NAME }} APP_PORT=${{ inputs.APP_PORT }} HEALTHCHECK_URL=${{ inputs.HEALTHCHECK_URL }}"
          kubectl version
          helm version
      - name: Deployment
        id: helm
        run: |
          echo "NEW_VERSION=${{ inputs.NEW_VERSION }}"
          helm upgrade --install ${{ inputs.APP_NAME }} ./chart -n ${{ inputs.APP_NAMESPACE }} -f ./chart/values.yaml --set deployment.image.tag=${{ inputs.NEW_VERSION }}
          sleep 15
          echo "helm_status=$helm_status" >> $GITHUB_OUTPUT
      - name: Smoke test
        id: test
        run: |
          echo "start smoke test..."          
          chmod +x ./.github/scripts/function.sh
          source ./.github/scripts/function.sh
          checkDeploy ${{ inputs.APP_NAME }} ${{ inputs.NEW_VERSION }} ${{ inputs.APP_NAMESPACE }}
          healthCheck ${{ inputs.APP_NAME }} ${{ inputs.APP_PORT }} ${{ inputs.HEALTHCHECK_URL }} ${{ inputs.APP_NAMESPACE }}
          echo "test_status=$test_status" >> $GITHUB_OUTPUT
    outputs:
      helm_status: ${{ steps.helm.outputs.helm_status }}
      test_status: ${{ steps.test.outputs.test_status }}